<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8">
        <title>Cubos Juna Pablo</title>
        <style>
            body { margin: 0; }
        </style>
    </head>
    <body>
        <script type="module">
            import * as THREE from 'https://unpkg.com/three/build/three.module.js';

            const scene = new THREE.Scene();
            const camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );

            const renderer = new THREE.WebGLRenderer();
            renderer.setSize( window.innerWidth, window.innerHeight );
            document.body.appendChild( renderer.domElement );

			//directionalLight: emite luz en una direccion especifica generando sombras en los cubos.
            const directionalLight = new THREE.DirectionalLight( 0xffffff, 2 );
            scene.add( directionalLight );

            
			//Dim: Se guardan en un arreglo los objetos referidos para construirlos.           
            const dim = [[1,1,1], [1.3,1.3,1.3], [1.3,1.3,1.3]];
            // Cubos : Se guardan los cubos deseados en el arreglo 
            var cubos = [];


			//for: Genera la geometria de los 3 diferentes cubos realizando el escalado respecto a cada cubo.
            for (let i=0; i<3; i++) {
                cubos.push(new THREE.BoxGeometry(dim[i][0], dim[i][1], dim[i][2]));
            }
			//Color: Entra en un arreglo los diferentes colores respecto a los 3 cubos partiendo del primero al tercero.
            const color = [{color:0xFF5733}, {color:0xF9FF33}, {color:0xFF33F6}];

            
            //Material : Entra en un arreglo los diferentes materiales deseados para los cubos;
            //MeshMatcapMaterial = codifica el color y el sombreado del material. 
            //MeshLambertMaterial = Un material para superficies no brillantes, sin reflejos especulares .
            //MeshPhongMaterial = Un material parecido a Lambert pero Phong usa sombreado por fragmento.                  
            const material=[new THREE.MeshMatcapMaterial(color[0]),new THREE.MeshLambertMaterial(color[1]),new THREE.MeshPhongMaterial(color[2])];
            
            //A traves de una nueva estructura for agregamos a la malla cada cubo
            const cube =[];
            for (let i=0; i<3; i++) {
                cube.push(new THREE.Mesh(cubos[i], material[i]));
            }
            //Agregamos cada cubo a la escena a travez en una estructura for
            for (let i=0; i<3; i++) {
                scene.add( cube[i] );
            }
            
            //Ubicamos el segundo y tercer cubo en un posicion diferente en x para observarlos
            cube[1].position.x = 2;
            cube[2].position.x = -2;

            camera.position.z = 5;

            // Animate: Es una funcion que anima cada cubo y modifica la velocidad de rotacion de cada cubo.
            function animate() {
                requestAnimationFrame( animate );

                cube[0].rotation.x += 0.01;
                cube[0].rotation.y += 0.01;

                cube[1].rotation.x += 0.02;
                cube[1].rotation.y += 0.02;

                cube[2].rotation.x += 0.03;
                cube[2].rotation.y += 0.03;

                renderer.render( scene, camera);
            }

            animate();
        </script>
    </body>
</html>
